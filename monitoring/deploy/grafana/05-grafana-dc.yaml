apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  name: grafana
  labels:
    training-monitoring: 'true'
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    app: grafana
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - env:
        - name: GF_SECURITY_ADMIN_USER
          value: admin
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: admin
        image: docker.io/grafana/grafana
        imagePullPolicy: Always
        name: grafana
        ports:
        - containerPort: 3000
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/grafana
          name: grafana-config
        - mountPath: /var/lib/grafana
          name: grafana-storage
        - mountPath: /etc/grafana/provisioning/datasources
          name: grafana-datasources
        - mountPath: /etc/grafana/provisioning/dashboards
          name: grafana-dashboards
        - mountPath: /etc/grafana/provisioning/plugins
          name: grafana-plugins
        - mountPath: /etc/grafana/provisioning/notifiers
          name: grafana-notifiers
        - mountPath: /grafana-dashboard-definitions/go-pg-crud
          name: grafana-dashboard-go-pg-crud
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: grafana-storage
      - configMap:
          defaultMode: 420
          name: grafana-dashboard-go-pg-crud
        name: grafana-dashboard-go-pg-crud
      - configMap:
          defaultMode: 420
          name: grafana-dashboards
        name: grafana-dashboards
      - emptyDir: {}
        name: grafana-notifiers
      - emptyDir: {}
        name: grafana-plugins
      - configMap:
          defaultMode: 420
          name: grafana-config
        name: grafana-config
      - configMap:
          defaultMode: 420
          name: grafana-datasources
        name: grafana-datasources
  test: false
  triggers:
  - type: ConfigChange
